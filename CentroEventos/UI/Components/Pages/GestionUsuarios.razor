@page "/GestionUsuarios"
@rendermode InteractiveServer

@using Aplicacion.entidades
@using Aplicacion.UseCases

@inject IRepositorioPersona ServicioPersona

<h1> Gestion de Usuarios </h1>

@if (personas == null || personas.Count == 0)
{
    <div>No hay personas registradas.</div>
}
else
{
    <ul class="list-group">
        @foreach (var persona in personas)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @if (editandoPersona != null && editandoPersona._id == persona._id)
                {
                    <!-- Modo edicion -->
                    <span>
                        <input class="form-control d-inline-block w-auto me-2" @bind="editandoPersona._nombre" />
                        <input class="form-control d-inline-block w-auto me-2" @bind="editandoPersona._apellido" />
                        <input class="form-control d-inline-block w-auto me-2" @bind="editandoPersona._dni" />
                        <input class="form-control d-inline-block w-auto me-2" @bind="editandoPersona._telefono" />
                        <input class="form-control d-inline-block w-auto me-2" @bind="editandoPersona._mail" />
                    </span>
                    <span>
                        <button class="btn btn-success btn-sm me-2" @onclick="GuardarEdicion">Guardar</button>
                        <button class="btn btn-secondary btn-sm" @onclick="CancelarEdicion">Cancelar</button>
                    </span>
                }
                else
                {
                    <!-- Modo vista -->
                    <span>@persona._nombre @persona._apellido -- @persona._mail</span>
                    <span>
                        <button class="btn btn-sm btn-primary me-2" @onclick="() => EditarPersona(persona)">Editar</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => EliminarPersona(persona)">Eliminar</button>
                    </span>
                }
            </li>
        }
    </ul>
}

@code{
    public int IdPersona;
    public List<Persona>?  personas;
    private Persona? editandoPersona;
    private Persona? personaAEditarOriginal;

    protected void EditarPersona(Persona p)
    {

        editandoPersona = new Persona(p._dni, p._nombre, p._apellido, p._mail, p._telefono, p._contrase√±a);
        personaAEditarOriginal = p;
    }

    protected void EliminarPersona (Persona p){
        new BajaPersona(this.ServicioPersona).Ejecutar(p._id);
    }

    protected void GuardarEdicion()
    {
        if (editandoPersona != null && personaAEditarOriginal != null)
        {
            personaAEditarOriginal._nombre = editandoPersona._nombre;
            personaAEditarOriginal._apellido = editandoPersona._apellido;
            personaAEditarOriginal._mail = editandoPersona._mail;
            personaAEditarOriginal._telefono = editandoPersona._telefono;
            personaAEditarOriginal._dni = editandoPersona._dni;
            
            new ModificarPersona(ServicioPersona).Ejecutar(personaAEditarOriginal);

            editandoPersona = null;
            personaAEditarOriginal = null;
        }
    }

    protected void CancelarEdicion()
    {
        editandoPersona = null;
        personaAEditarOriginal = null;
    }

    protected override void OnInitialized (){
        
        this.personas = new ListarTodasLasPersonas(ServicioPersona).Ejecutar();
        
    }

}