@page "/mis-reservas"
@rendermode InteractiveServer
@using Aplicacion.entidades
@inject ListarTodasLasReservas ListarTodasLasReservas
@inject BajaReserva BajaReserva
@inject ModificarReserva ModificarReserva
@inject IServicioAutenticacion Autenticacion
@inject PersonaPoseeElPermiso PersonaPoseeElPermiso

<h3>Reservas</h3>

<!--
@if (mostrarConfirmacion)
{
    <div class="modal show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Acción</h5>
                    <button type="button" class="close" @onclick="CancelarConfirmacion">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@mensajeConfirmacion</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelarConfirmacion">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="ConfirmarAccion">Confirmar</button>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    </div>
}

@if (mostrarEdicion && reservaAEditar != null)
{
    <div class="modal show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Editar Estado de Asistencia</h5>
                    <button type="button" class="close" @onclick="CancelarEdicion">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="estadoAsistencia">Estado de Asistencia:</label>
                        <select id="estadoAsistencia" class="form-control" @bind="estadoAsistenciaSeleccionado">
                            @foreach (var estado in Enum.GetValues(typeof(Asistencia)))
                            {
                                <option value="@estado">@estado</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelarEdicion">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="GuardarEdicionAsistencia">Guardar Cambios</button>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    </div>
}
-->

<ul class="list-group">
                @foreach (var reserva in reservas)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @if (reservaEditando != null && reservaEditando._id == reserva._id)
                        {
                            <div>
                                nombre: <input class="form-control mb-2" @bind="reservaEditando._estadoAsistencia" />
                            </div>
                            <span>
                                <button class="btn btn-success btn-sm me-2" @onclick="EditarPersonaDC">Guardar</button>
                                <button class="btn btn-secondary btn-sm" @onclick="CancelarEdicion">Cancelar</button>
                            </span>
                        }
                        else
                        {
                            <!-- Modo vista -->
                            <span>@reserva.Persona._nombre @reserva.EventoDeportivo._nombre @reserva._estadoAsistencia </span>
                            <span>
                                @if (permisoModificar)
                                {
                                    <button class="btn btn-sm btn-primary me-2" @onclick="() => EditarPersona(persona)">Editar</button>
                                    <button class="btn btn-sm btn-primary me-2" @onclick="() => EditarPermisos(persona)">Editar
                                        Permisos</button>
                                }
                                @if (permidoEliminar)
                                {
                                    <button class="btn btn-sm btn-danger" @onclick="() => EliminarPersonaDC(persona)">Eliminar</button>
                                }
                            </span>
                        }
                    </li>
                }
            </ul>


@if (reservas == null)
{
    <p>Cargando reservas...</p>
}
else if (!reservas.Any())
{
    <p>No tiene reservas registradas.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Evento</th>
                <th>Fecha</th>
                <th>Estado Asistencia</th>
                <th>Accion</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var reserva in reservas)
        {
            <tr>
                <td>@(reserva.EventoDeportivo?._nombre ?? "Sin evento")</td>
                <td>@(reserva.EventoDeportivo?._fechaHoraInicio.ToString("yyyy-MM-dd HH:mm") ?? "-")</td>
                <td>@(reserva._estadoAsistencia.ToString())</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => ConfirmarEdicion(reserva)">Editar</button>
                    <button class="btn btn-danger" @onclick="() => ConfirmarEliminacion(reserva)">Eliminar</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    public int personaId { get; set; } 
    private IEnumerable<Reserva> reservas = new List<Reserva>();
    private string? accionPendiente;
    private string mensajeConfirmacion = "";
    private bool mostrarConfirmacion = false;
    private bool mostrarEdicion = false;
    private Asistencia estadoAsistenciaSeleccionado = Asistencia.Pendiente;
    private Reserva reservaEditando;
    private Reserva reservaOriginal;
    private Boolean permisoModificar;
    private Boolean permidoEliminar;

    Reserva? reservaAEliminar = null;
    Reserva? reservaAEditar = null;
    
    private void ConfirmarEliminacion(Reserva res) {
        reservaAEliminar = res;
        accionPendiente = "eliminar";
        mensajeConfirmacion = "¿Desea eliminar la reserva?";
        mostrarConfirmacion = true;
    }

    private void ConfirmarEdicion(Reserva res) {
        reservaAEditar = res;
        accionPendiente = "editar";
        mensajeConfirmacion = "¿Desea editar la reserva?";
        mostrarConfirmacion = true;
    }

    private void CancelarConfirmacion() {
        mostrarConfirmacion = false;
        accionPendiente = null;
    }

    private void CancelarEdicion() {
        mostrarEdicion = false;
        reservaAEditar = null;
    }

    private void ConfirmarAccion() {
        mostrarConfirmacion = false;
        
        if (accionPendiente == "eliminar" && reservaAEliminar != null)
        {
            Console.WriteLine("Eliminando Reserva ReservasPersona.raz");
            BajaReserva.Ejecutar(reservaAEliminar._id);
            // Reload the data
            ActualizarListas();
            reservaAEliminar = null;
        }
        else if (accionPendiente == "editar" && reservaAEditar != null)
        {
            estadoAsistenciaSeleccionado = reservaAEditar._estadoAsistencia;
            mostrarEdicion = true;
        }
        
        accionPendiente = null;
    }

    private void GuardarEdicionAsistencia() {
        if (reservaAEditar != null)
        {
            reservaAEditar._estadoAsistencia = estadoAsistenciaSeleccionado;
            ModificarReserva.Ejecutar(reservaAEditar);
            ActualizarListas();
        }
        
        mostrarEdicion = false;
        reservaAEditar = null;
    }
    
    private void ActualizarListas()
    {
        reservas = ListarTodasLasReservas.Ejecutar();
    }

    protected void consultaPermisos (){
        this.permisoModificar = this.PersonaPoseeElPermiso.Ejecutar(personaId, "ReservaModificacion");
        this.permidoEliminar = this.PersonaPoseeElPermiso.Ejecutar(personaId, "ReservaBaja");
    }

    protected override void OnInitialized()
    {
        reservas = ListarTodasLasReservas.Ejecutar().ToList();
        Persona? persona = Autenticacion.ObtenerUsuarioActualAsync().Result;
        consultaPermisos();
        
    }
}